name: build
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x, 18.x]
    env:
      CI: true
      COVERAGE: ${{ matrix.node-version == '18.x' && true || false }}
    steps:
    # Setup.
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    # Cache.
    - id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v3
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-${{ matrix.node-version }}-yarn-${{ hashFiles('./yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.node-version }}-yarn-

    # Test.
    - run: yarn install
    - run: yarn dist
    - run: yarn test
    - run: yarn lint

    # Coverage.
    - name: Run coverage
      if: ${{ env.COVERAGE == 'true' }}
      run: |
        yarn coverage
        yarn coverage:report
    - name: Report coverage
      if: ${{ env.COVERAGE == 'true' }}
      uses: codecov/codecov-action@v3
      with:
        files: .nyc_output/coverage.lcov
